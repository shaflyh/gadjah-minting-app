{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","fonts/RenoMono.otf","fonts/upheavtt.ttf","fonts/Gumball.ttf","fonts.js","Modal.js","NotWL.js","Mintsuccess.js","App.js","Publicsale.js","Third.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","connect","fetch","headers","Accept","abiResponse","json","abi","configResponse","CONFIG","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","NETWORK","ID","SmartContractObj","CONTRACT_ADDRESS","on","updateAccount","location","reload","NAME","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextSub","p","TextSubTitle","TextDescription","StyledHR","hr","GlobalStyle","createGlobalStyle","Upheaval","RenoMono","Gumball","animate","keyframes","ContainerModal","ModalButton","button","ModalDetails","ModalTitle","h2","ModalSubTitle","h3","ModalText","Modal","setShowModal","modalRef","useRef","ReactDom","createPortal","ref","onClick","e","target","current","document","getElementById","StyledLogo","img","Notwl","setShowNotwl","notwlRef","alt","src","Mintsuccess","setShowMintsuccess","mintsuccessRef","StyledButton","StyledRoundButton","ResponsiveWrapper","ResponsiveWrapperHeader","ResponsiveWrapperContent","SocialMediaImage","StyledLink","WalletBox","SocialMedia","SocialMediaDiv","HowToMint","UnrevealVid","video","App","useState","showModal","showNotwl","showMintsuccess","useDispatch","useSelector","walletAddress","setAddress","claimingNft","setClaimingNft","setFeedback","wl_wallet","setCheckWallet","mintAmount","setMintAmount","SCAN_LINK","SYMBOL","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","WEB_LINK","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","WHITELIST_URL","SET_CONFIG","claimNFTs","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","wl","setWL","getData","checking","map","w","wallet","toUpperCase","substring","getConfig","config","useEffect","axios","get","response","reponse","style","padding","backgroundColor","href","className","icon","faDiscord","faTwitter","faMedium","faInstagram","autoPlay","loop","muted","Number","textAlign","color","lineHeight","disabled","preventDefault","newMintAmount","decrementMintAmount","fontFamily","incrementMintAmount","fontSize","faQuestionCircle","Third","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.bca1c9b7.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: #fff;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  font-family: 'Upheaval';\n  color: var(--primary-text);\n  font-size: 60px;\n  font-weight: 400;\n  letter-spacing: 8px;\n  line-height: 1.6;\n`;\n\nexport const TextSub = styled.p`\n  font-family: 'Upheaval';\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 400;\n  letter-spacing: 8px;\n  line-height: 1.6;\n  @media (max-width: 1330px) {\n    font-size: 19px;\n  }\n  @media (max-width: 600px) {\n    font-size: 12px;\n\n  }\n`;\n\nexport const TextSubTitle = styled.p`\n  font-family: 'Renomono';\n  color: var(--primary-text);\n  font-size: 20px;\n  font-weight: 400;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-family: \"Renomono\";\n  font-size: 60px;\n  line-height: 1.6;\n  @media (max-width: 1330px) {\n    font-size: 50px;\n  }\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n\nexport const StyledHR = styled.hr`\n  border: 2px solid #fff;  \n  background-color: white;\n  border-radius: 2px;\n  width: 76%;\n`;\n","export default __webpack_public_path__ + \"static/media/RenoMono.8b239c68.otf\";","export default __webpack_public_path__ + \"static/media/upheavtt.e3d365ba.ttf\";","export default __webpack_public_path__ + \"static/media/Gumball.2e792f78.ttf\";","import { createGlobalStyle } from 'styled-components'\r\nimport RenoMono from './fonts/RenoMono.otf'\r\nimport Upheaval from './fonts/upheavtt.ttf';\r\nimport Gumball from './fonts/Gumball.ttf';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    @font-face {\r\n        font-family: 'Upheaval';\r\n        src: url(${Upheaval}) format('truetype');\r\n    }\r\n\r\n    @font-face {\r\n        font-family: 'Renomono';\r\n        src: url(${RenoMono}) format('opentype');\r\n    }\r\n\r\n    @font-face {\r\n        font-family: 'Gumball';\r\n        src: url(${Gumball}) format('truetype');\r\n    }\r\n`;\r\n\r\n// export const Renomono = createGlobalStyle`\r\n//     @font-face {\r\n//         font-family: 'Renomono';\r\n//         src: url(${RenoMono}) format('opentype');\r\n//     }\r\n// `;\r\n\r\nexport default GlobalStyle;","//Modal.js\r\nimport React, { useRef } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport styled from \"styled-components\";\r\nimport { keyframes } from 'styled-components';\r\nimport GlobalStyle from \"./fonts\";\r\nimport * as s from \"./styles/globalStyles\";\r\n\r\nexport const Container = styled.div `\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    height: 100vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nexport const animate = keyframes`\r\n    from {\r\n    transform: scale(0.5);\r\n  }\r\n  to {\r\n    transform: scale(1);\r\n`;\r\n\r\nexport const ContainerModal = styled.div `\r\n  z-index: 1;\r\n  width: 1000px;\r\n  height: 500px;\r\n  background: #7167E3;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 5px;\r\n  position: relative;\r\n  animation: ${animate} 0.3s;\r\n  @media (max-width: 600px) {\r\n    width: 360px;\r\n    height: 465px;\r\n  }\r\n`;\r\n\r\nexport const ModalButton = styled.button `\r\n    position: absolute;\r\n    top: 7px;\r\n    right: 7px;\r\n    padding: 8px 11px;\r\n    background: crimson;\r\n    color: white;\r\n    font-weight: bold;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: 2px;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const ModalDetails = styled.div`\r\n    text-decoration: none;\r\n    margin: 0 70px;\r\n    font-weight: bold;\r\n    // font-size: 15px;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const ModalTitle = styled.h2 `\r\n    font-family: 'Gumball';\r\n    font-weight: 400;\r\n    font-size: 64px;\r\n    color: #F9F871;\r\n    text-align: center;\r\n    @media (max-width: 600px) {\r\n      font-size: 33px;\r\n    }\r\n`;\r\n\r\nexport const ModalSubTitle = styled.h3 `\r\n    font-family: 'Upheaval';\r\n    font-size: 24px;\r\n    font-weight: 10;\r\n    color: #fff;\r\n    line-height: 2;\r\n    letter-spacing: 2px;\r\n    text-align: left;\r\n    @media (max-width: 600px) {\r\n      font-size: 21px;\r\n      line-height: 1;\r\n    }\r\n`;\r\n\r\nexport const ModalText = styled.p `\r\n    font-family: 'Renomono';\r\n    font-size: 20px;\r\n    color: #fff;\r\n    font-weight: 100;\r\n    text-align: left;\r\n    line-height: 1.2;\r\n    @media (max-width: 600px) {\r\n      font-size: 10px;\r\n      line-height: 1.5;\r\n    }\r\n`;\r\n\r\n\r\nexport const Modal = ({ setShowModal }) => {\r\n  // close the modal when clicking outside the modal.\r\n  const modalRef = useRef();\r\n  const closeModal = (e) => {\r\n    if (e.target === modalRef.current) {\r\n      setShowModal(false);\r\n    }\r\n  };\r\n  //render the modal JSX in the portal div.\r\n  return ReactDom.createPortal(\r\n    <Container ref={modalRef} onClick={closeModal}>\r\n      <ContainerModal>\r\n      <GlobalStyle />\r\n          <ModalDetails>\r\n              <ModalTitle>\r\n                How to Mint?\r\n              </ModalTitle>\r\n              <s.SpacerLarge />\r\n              \r\n            <ol>\r\n              \r\n                <ModalSubTitle>\r\n                    <li> Connect to your wallet </li>\r\n                </ModalSubTitle>\r\n                <ul>\r\n                    <li> <ModalText>\r\n                        Click \"Connect Wallet\" and authorize connection in your wallet.\r\n                    </ModalText> </li>\r\n                </ul>\r\n                <s.SpacerSmall />\r\n                <ModalSubTitle>\r\n                    <li> Choose how many NFT(s) you would like to mint </li>\r\n                </ModalSubTitle>\r\n                <ul>\r\n                    <li> <ModalText>\r\n                        You are entitled to mint up to 10 Gadjah Society NFTs.\r\n                    </ModalText> </li>\r\n                </ul>\r\n                <s.SpacerSmall />\r\n                <ModalSubTitle>\r\n                    <li> Confirm in your wallet </li>\r\n                </ModalSubTitle>\r\n                <ul>\r\n                    <li> <ModalText>\r\n                        You have to have enough ETH in your wallet to cover 'Max gas fees' + mint cost, check FAQ.\r\n                    </ModalText> </li>\r\n                </ul>\r\n\r\n            </ol>\r\n            <s.SpacerLarge />\r\n          </ModalDetails>\r\n        \r\n        <ModalButton onClick={() => setShowModal(false)}>X</ModalButton>\r\n      </ContainerModal>\r\n    </Container>,\r\n    document.getElementById(\"portal\")\r\n  );\r\n};","//Modal.js\r\nimport React, { useRef } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport styled from \"styled-components\";\r\nimport { keyframes } from 'styled-components';\r\nimport GlobalStyle from \"./fonts\";\r\nimport * as s from \"./styles/globalStyles\";\r\n\r\nexport const Container = styled.div `\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    height: 100vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nexport const animate = keyframes`\r\n    from {\r\n    transform: scale(0.5);\r\n  }\r\n  to {\r\n    transform: scale(1);\r\n`;\r\n\r\nexport const ContainerModal = styled.div `\r\n  z-index: 1;\r\n  width: 650px;\r\n  height: 450px;\r\n  background: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 30px;\r\n  // border: 8px solid #DD3B3E;\r\n  position: relative;\r\n  animation: ${animate} 0.3s;\r\n  @media (max-width: 600px) {\r\n    width: 320px;\r\n    height: 400px;\r\n  }\r\n`;\r\n\r\nexport const ModalButton = styled.button `\r\n    position: absolute;\r\n    top: 7px;\r\n    right: 7px;\r\n    padding: 8px 11px;\r\n    background: crimson;\r\n    color: white;\r\n    font-weight: bold;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: 2px;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const ModalDetails = styled.div`\r\n    text-decoration: none;\r\n    margin: 0 45px;\r\n    font-weight: bold;\r\n    // font-size: 15px;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const ModalTitle = styled.h2 `\r\n    font-family: 'Gumball';\r\n    font-weight: 400;\r\n    font-size: 84px;\r\n    color: #DD3B3E;\r\n    text-align: center;\r\n`;\r\n\r\nexport const ModalSubTitle = styled.h3 `\r\n    font-family: 'Upheaval';\r\n    font-size: 36px;\r\n    font-weight: 10;\r\n    color: #DD3B3E;\r\n    letter-spacing: 2px;\r\n    text-align: center;\r\n    @media (max-width: 600px) {\r\n      font-size: 32px;\r\n    }\r\n`;\r\n\r\nexport const ModalText = styled.p `\r\n    font-family: 'Renomono';\r\n    font-size: 22px;\r\n    color: #000;\r\n    font-weight: 100;\r\n    text-align: center;\r\n    line-height: 1.2;\r\n    @media (max-width: 600px) {\r\n      font-size: 18px;\r\n    }\r\n`;\r\n\r\nexport const StyledLogo = styled.img`\r\n  display: block;\r\n  margin: auto;\r\n  width: 240px;\r\n  @media (min-width: 767px) {\r\n    width: 280px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\n\r\nexport const Notwl = ({ setShowNotwl }) => {\r\n  // close the modal when clicking outside the modal.\r\n  const notwlRef = useRef();\r\n  const closeNotwl = (e) => {\r\n    if (e.target === notwlRef.current) {\r\n        setShowNotwl(false);\r\n    }\r\n  };\r\n  //render the modal JSX in the portal div.\r\n  return ReactDom.createPortal(\r\n    <Container ref={notwlRef} onClick={closeNotwl}>\r\n      <ContainerModal>\r\n      <GlobalStyle />\r\n          <ModalDetails>\r\n          <s.SpacerLarge />\r\n              {/* <ModalTitle>\r\n                SORRY!\r\n              </ModalTitle> */}\r\n              {/* <s.SpacerLarge /> */}\r\n\r\n              <StyledLogo alt={\"logo\"} src={\"/config/images/cry.png\"} />\r\n              <s.SpacerLarge />\r\n                            \r\n              <ModalSubTitle>\r\n                    You can't mint NFT!\r\n              </ModalSubTitle>\r\n              <s.SpacerLarge />\r\n              <ModalText>\r\n              You are not listed in the whitelist.\r\n              </ModalText>\r\n                \r\n\r\n            <s.SpacerLarge />\r\n          </ModalDetails>\r\n        \r\n        {/* <ModalButton onClick={() => setShowNotwl(false)}>X</ModalButton> */}\r\n      </ContainerModal>\r\n    </Container>,\r\n    document.getElementById(\"portal\")\r\n  );\r\n};","//Modal.js\r\nimport React, { useRef } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport styled from \"styled-components\";\r\nimport { keyframes } from 'styled-components';\r\nimport GlobalStyle from \"./fonts\";\r\nimport * as s from \"./styles/globalStyles\";\r\n\r\nexport const Container = styled.div `\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    height: 100vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    background: rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nexport const animate = keyframes`\r\n    from {\r\n    transform: scale(0.5);\r\n  }\r\n  to {\r\n    transform: scale(1);\r\n`;\r\n\r\nexport const ContainerModal = styled.div `\r\n  z-index: 1;\r\n  width: 650px;\r\n  height: 450px;\r\n  background: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: 30px;\r\n  // border: 8px solid #00C2A0;\r\n  position: relative;\r\n  animation: ${animate} 0.3s;\r\n  @media (max-width: 600px) {\r\n    width: 320px;\r\n    height: 400px;\r\n  }\r\n`;\r\n\r\nexport const ModalButton = styled.button `\r\n    position: absolute;\r\n    top: 7px;\r\n    right: 7px;\r\n    padding: 8px 11px;\r\n    background: crimson;\r\n    color: white;\r\n    font-weight: bold;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: 2px;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const ModalDetails = styled.div`\r\n    text-decoration: none;\r\n    margin: 0 45px;\r\n    font-weight: bold;\r\n    // font-size: 15px;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const ModalTitle = styled.h2 `\r\n    font-family: 'Gumball';\r\n    font-weight: 400;\r\n    font-size: 75px;\r\n    color: #00C2A0;\r\n    text-align: center;\r\n`;\r\n\r\nexport const ModalSubTitle = styled.h3 `\r\n    font-family: 'Upheaval';\r\n    font-size: 40px;\r\n    font-weight: 10;\r\n    color: #7167E3;\r\n    letter-spacing: 2px;\r\n    text-align: center;\r\n    @media (max-width: 600px) {\r\n      font-size: 32px;\r\n    }\r\n`;\r\n\r\nexport const ModalText = styled.p `\r\n    font-family: 'Renomono';\r\n    font-size: 20px;\r\n    color: #000;\r\n    font-weight: 100;\r\n    text-align: center;\r\n    line-height: 1.2;\r\n    @media (max-width: 600px) {\r\n      font-size: 18px;\r\n    }\r\n`;\r\n\r\nexport const StyledLogo = styled.img`\r\n  display: block;\r\n  margin: auto;\r\n  width: 200px;\r\n  @media (min-width: 767px) {\r\n    width: 250px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\n\r\nexport const Mintsuccess = ({ setShowMintsuccess }) => {\r\n  // close the modal when clicking outside the modal.\r\n  const mintsuccessRef = useRef();\r\n  const closeMintsuccess = (e) => {\r\n    if (e.target === mintsuccessRef.current) {\r\n        setShowMintsuccess(false);\r\n    }\r\n  };\r\n  //render the modal JSX in the portal div.\r\n  return ReactDom.createPortal(\r\n    <Container ref={mintsuccessRef} onClick={closeMintsuccess}>\r\n      <ContainerModal>\r\n      <GlobalStyle />\r\n          <ModalDetails>\r\n          <s.SpacerLarge />\r\n              {/* <ModalTitle>\r\n              CONGRATS!\r\n              </ModalTitle>\r\n              <s.SpacerLarge /> */}\r\n\r\n              <StyledLogo alt={\"logo\"} src={\"/config/images/winking.png\"} />\r\n              <s.SpacerLarge />\r\n                            \r\n              <ModalSubTitle>\r\n                    Minting success!\r\n              </ModalSubTitle>\r\n              <s.SpacerLarge />\r\n              <ModalText>\r\n              Go check your Metamask or go to Opensea!\r\n              </ModalText>\r\n                \r\n\r\n            <s.SpacerLarge />\r\n          </ModalDetails>\r\n        \r\n        {/* <ModalButton onClick={() => setShowMintsuccess(false)}>X</ModalButton> */}\r\n      </ContainerModal>\r\n    </Container>,\r\n    document.getElementById(\"portal\")\r\n  );\r\n};","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faInstagram,\n  faDiscord,\n  faTwitter,\n  faMedium,\n} from '@fortawesome/free-brands-svg-icons';\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\nimport { Modal } from \"./Modal\";\nimport { Notwl } from \"./NotWL\";\nimport { Mintsuccess } from \"./Mintsuccess\";\nimport \"./style.css\";\nimport axios from \"axios\";\n\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  font-family: 'Upheaval';\n  padding: 10px;\n  font-size: 20px;\n  border-radius: 4px;\n  border: 4px solid #7167E3;\n  background-color: #49FCE3;\n  padding: 10px;\n  letter-spacing: 6px;\n  // font-weight: bold;\n  color: #7167E3;\n  width: 75%;\n  height: 50px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(0, 0, 0, 0.4);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(0, 0, 0, 0.4);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(0, 0, 0, 0.4);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n  @media (max-width: 1330px) {\n    font-size: 16px;\n  }\n  @media (max-width: 600px) {\n    font-size: 12px;\n  }\n`;\n\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 10px;\n  // border: 4px solid #F8A9FF;\n  background-color: #fff;\n  // font-weight: bold;\n  font-size: 50px;\n  color: #7167E3;\n  width: 60px;\n  height: 60px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  // box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  // -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n  margin: auto 0;\n  @media (max-width: 1330px) {\n    width: 50px;\n    height: 50px;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  backdrop-filter: blur(4px);\n  background-color: rgba(0, 0,0, 0.3);\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  margin: auto;\n  border-radius: 20px;\n  width: 75%;\n  padding: 50px 90px;\n  @media (min-width: 940px) {\n    flex-direction: row;\n  }\n  @media (max-width: 1330px) {\n    padding: 0;\n  }\n  @media (max-width: 600px) {\n    width: 100%;\n  }\n`;\n\nexport const ResponsiveWrapperHeader = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n  @media (max-width: 767px) {\n    text-align: center;\n  }\n`;\n\nexport const ResponsiveWrapperContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: stretched;\n  width: 75%;\n  @media (min-width: 767px) {\n    // display: block;\n    flex-direction: row;\n  }\n  @media (max-width: 767px) {\n    display: -webkit-inline-box;\n    // flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  display: inline;\n  margin: 10px 10px 10px 150px;\n  width: 160px;\n  @media (max-width: 1330px) {\n    margin: 10px 10px 10px 125px;\n  }\n  @media (max-width: 767px) {\n    width: 150px;\n    margin: auto\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const SocialMediaImage = styled.img`\n  display: inline;\n  width: 33px;\n  transition: width 0.5s;\n  transition: height 0.5s;\n  transition: transform .3s;\n  &:hover {\n    transform: scale(1.3);\n  };\n  @media (max-width: 1330px) {\n    width: 25px;\n  }\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  width: 280px;\n  @media (min-width: 900px) {\n    width: 340px;\n  }\n  @media (min-width: 1000px) {\n    width: 380px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nexport const WalletBox = styled.div`\n  margin: 10px 120px 10px 10px;\n  text-decoration: none;\n  border-radius: 10px;\n  border: 2px solid white;\n  background-color: #363076;\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  width: 250px;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  @media (max-width: 1330px) {\n    margin: 10px 40px 10px 10px;\n  }\n  @media (max-width: 767px) {\n    margin: auto;\n  }\n`;\n\nexport const SocialMedia = styled.a `\n  color: #fff;\n  margin: 18px;\n  vertical-align: middle;\n  @media (max-width: 600px) {\n    margin: 10px;\n  }\n`; \n\nexport const SocialMediaDiv = styled.div `\n  font-size: 32px;\n  padding: 16px;\n  @media (max-width: 1330px) {\n    font-size: 24px;\n  }\n`;\n\nexport const HowToMint = styled.a`\n  color: rgba(73, 252, 227, 0.6);\n  // text-decoration: underline;\n  font-family: \"Renomono\";\n  font-size: 22px;\n  // text-align: right;\n  line-height: 1.6;\n  cursor: pointer;\n  word-spacing: -3px;\n  &:hover {\n    // cursor: pointer;\n    text-decoration: underline;\n  }\n  @media (max-width: 600px) {\n    font-size: 18px;\n  }\n`;\n\nexport const ModalButton = styled.button `\n  padding: 13px 29px;\n  font-size: 1rem;\n  font-weight: bold;\n  border-radius: 5px;\n  border: none;\n  outline: none;\n  background: crimson;\n  color: white;\n  cursor: pointer;\n`;\n\nexport const customClasss = `\n  border: 2px solid #000;\n`;\n\nexport const UnrevealVid = styled.video `\n  border-radius: 4px;\n  // border: 4px solid #7167e3;\n  width: 280px;\n  @media (max-width: 380px) {\n    width: 175px;\n  }\n  @media (max-width: 620px) {\n    width: 225px;\n    margin: 20px 0 30px 0;\n  }\n  @media (min-width: 900px) {\n    width: 300px;\n  }\n  @media (min-width: 1000px) {\n    width: 340px;\n  }\n  @media (min-width: 1330px) {\n    width: 380px;\n  }\n`\n\nfunction App() {\n  const [showModal, setShowModal] = useState(false);\n  \n  const openModal = () => {\n    setShowModal(true);    \n  };\n\n  const [showNotwl, setShowNotwl] = useState(false);\n\n  const openNotwl = () => {\n    setShowNotwl(true);    \n  };\n\n  const [showMintsuccess, setShowMintsuccess] = useState(false);\n\n  const openMintsuccess = () => {\n    setShowMintsuccess(true);    \n  };\n\n  const dispatch = useDispatch();\n  const whitelist_url = \"https://api.gadjahsocietynft.com/whitelist\";\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [walletAddress, setAddress] = useState(\"No connection\");\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(``);\n  const [wl_wallet, setCheckWallet] = useState(false);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    WEB_LINK: \"\",\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n    WHITELIST_URL: \"\"\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        setClaimingNft(false);\n        // {Swal.fire({  \n        //   title: 'Minting Success!',  \n        //   icon: 'success',\n        //   iconColor: '#7167E3',\n        //   text: 'Go check your Metamask or go to Opensea!',  \n        //   // imageUrl: 'https://c.tenor.com/LY1HzBmDJwAAAAAC/wink-bryan-breynolds.gif',  \n        //   imageWidth: '200px',\n        //   timer: 4000,\n        //   timerProgressBar: true,\n        //   background: '#49FCE3',\n        //   customClass: 'swal-custom',\n        // })};\n        openMintsuccess();\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const [wl, setWL] = useState(null);\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 50) {\n      newMintAmount = 50;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n\n    // if (wl_wallet) {\n      let checking = false;\n      if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n        dispatch(fetchData(blockchain.account));\n        setCheckWallet(false);\n        setAddress(\"No connection\");\n        console.log(wl_wallet)\n        wl && wl.map((w) => {\n          if (w.wallet.toUpperCase() == blockchain.account.toUpperCase()) {\n            checking = true;\n            setCheckWallet(true);\n          }\n          // console.log(w.wallet)\n        });\n\n        if (checking) {\n          setAddress(blockchain.account.substring(0,4) + \"...\" + blockchain.account.substring(38,42));\n        }\n        else {\n          // {Swal.fire({  \n          //   title: 'You can\\'t mint NFT!',  \n          //   icon: 'error',\n          //   // iconColor: '#7167E3',\n          //   text: 'You are not listed in the whitelist.',  \n          //   // imageUrl: 'https://c.tenor.com/LY1HzBmDJwAAAAAC/wink-bryan-breynolds.gif',  \n          //   // imageWidth: '200px',\n          //   // timer: 4000,\n          //   // timerProgressBar: true,\n          //   // background: '#49FCE3',\n          //   // customClass: 'swal-custom',\n          // })};\n          openNotwl();\n        }\n      }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  useEffect(() => {\n    axios.get(whitelist_url).then((response) => {\n      setWL(response.data.reponse);\n      // console.log(response.data.reponse)\n    });\n  }, []);\n    \n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        // ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg_minting.png\" : null}\n      >\n        <ResponsiveWrapperHeader>\n          <a href={CONFIG.WEB_LINK}>\n            <StyledLogo alt={\"logo\"} src={\"/config/images/logo_minting.png\"} />\n          </a>\n\n          <SocialMediaDiv>\n            <SocialMedia href=\"https://discord.gg/jfjpJZgVUm\">\n              <FontAwesomeIcon className=\"zoom-a\" icon={faDiscord} />\n            </SocialMedia>\n            <SocialMedia href=\"https://twitter.com/GadjahSociety\">\n              <FontAwesomeIcon className=\"zoom-a\" icon={faTwitter} />\n            </SocialMedia>\n            <SocialMedia href=\"https://medium.com/@gadjahsociety\">\n              <FontAwesomeIcon className=\"zoom-a\" icon={faMedium} />\n            </SocialMedia>\n            <SocialMedia href=\"https://www.instagram.com/gadjahsocietynft/\">\n              <FontAwesomeIcon className=\"zoom-a\" icon={faInstagram} />\n            </SocialMedia>\n            <SocialMedia href={CONFIG.MARKETPLACE_LINK}>\n              <SocialMediaImage alt={\"logo\"} src={\"/config/images/logo-opensea.png\"} />\n            </SocialMedia>\n          </SocialMediaDiv>\n          \n          {/* </SocialMedia> */}\n          <WalletBox>\n            {blockchain.account !== \"\" ? (\n            <>\n            <s.TextSubTitle>\n              {walletAddress}\n              </s.TextSubTitle>\n            </>\n            ) : null }\n          </WalletBox>\n        </ResponsiveWrapperHeader>\n\n        {/* <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n          <s.TextTitle> PUBLIC SALE </s.TextTitle>\n        </s.Container> */}\n    \n        <s.SpacerSmall />\n\n        <ResponsiveWrapper flex={1} test>\n            <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n              {/* <StyledImg alt={\"Gadjah with the duck\"} src={\"/config/images/unr_nft.png\"} /> */}\n              <UnrevealVid autoPlay loop muted>\n                <source src={\"/config/images/g_reveal.mp4\"} type='video/mp4'/>\n              </UnrevealVid>\n            </s.Container>\n            {/* <s.SpacerLarge /> */}\n            <s.Container flex={1} jc={\"center\"} ai={\"center\"} >\n            <s.StyledHR></s.StyledHR>\n            <s.SpacerSmall />\n            {/* <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n            </s.TextTitle> */}\n            \n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextSub\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextSub>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n              <ResponsiveWrapperContent>\n                <s.TextSub>\n                  Price\n                </s.TextSub>\n                <s.TextSub\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\",  }}\n                >\n                  {CONFIG.DISPLAY_COST}{\" \"}{CONFIG.NETWORK.SYMBOL}\n                </s.TextSub>\n                </ResponsiveWrapperContent>\n                <s.SpacerSmall />\n                <s.StyledHR></s.StyledHR>\n                <s.SpacerXSmall />\n                {!wl_wallet || blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                        // checkWL();\n                      }}\n                    >\n                      CONNECT WALLET\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                            fontSize: \"20px\"\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                    <ResponsiveWrapperContent>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.TextDescription\n                        style={{\n                          fontFamily : \"Upheaval\",\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n                      <StyledRoundButton\n                        disabled={claimingNft || mintAmount >= 5 ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                      </ResponsiveWrapperContent>\n                    </s.Container>\n                    <s.StyledHR ></s.StyledHR>\n                    <s.SpacerSmall />\n                    \n                    <ResponsiveWrapperContent>\n                      <s.TextSub>\n                        Total\n                      </s.TextSub>\n                      <s.TextSub\n                        style={{ textAlign: \"right\", color: \"var(--accent-text)\",  }}\n                      >\n                        {CONFIG.DISPLAY_COST * mintAmount}{\" \"}{CONFIG.NETWORK.SYMBOL}\n                      </s.TextSub>  \n                    </ResponsiveWrapperContent>\n                    \n                    <s.SpacerSmall />\n                    <s.SpacerXSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"MINTING...\" : \"MINT NOW\"}\n                      </StyledButton>\n                    </s.Container>                   \n                  </>\n                )}\n                <s.SpacerLarge />\n                <HowToMint onClick={openModal}>\n                  how to mint <FontAwesomeIcon icon={ faQuestionCircle } />\n                </HowToMint>\n                {showModal ? <Modal setShowModal={setShowModal} /> : null}\n              </>\n            )} \n            {showNotwl ? <Notwl setShowNotwl={setShowNotwl} /> : null}\n            {showMintsuccess ? <Mintsuccess setShowMintsuccess={setShowMintsuccess} /> : null}\n            </s.Container>\n          <s.SpacerLarge />\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faInstagram,\r\n  faDiscord,\r\n  faTwitter,\r\n  faMedium,\r\n} from '@fortawesome/free-brands-svg-icons';\r\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { Modal } from \"./Modal\";\r\nimport { Mintsuccess } from \"./Mintsuccess\";\r\nimport \"./style.css\";\r\nimport axios from \"axios\";\r\n\r\nconst truncate = (input, len) =>\r\n  input.length > len ? `${input.substring(0, len)}...` : input;\r\n\r\nexport const StyledButton = styled.button`\r\n  font-family: 'Upheaval';\r\n  padding: 10px;\r\n  font-size: 20px;\r\n  border-radius: 4px;\r\n  border: 4px solid #7167E3;\r\n  background-color: #49FCE3;\r\n  padding: 10px;\r\n  letter-spacing: 6px;\r\n  // font-weight: bold;\r\n  color: #7167E3;\r\n  width: 75%;\r\n  height: 50px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 6px 0px -2px rgba(0, 0, 0, 0.4);\r\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(0, 0, 0, 0.4);\r\n  -moz-box-shadow: 0px 6px 0px -2px rgba(0, 0, 0, 0.4);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n  @media (max-width: 1330px) {\r\n    font-size: 16px;\r\n  }\r\n  @media (max-width: 600px) {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\n\r\nexport const StyledRoundButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  // border: 4px solid #F8A9FF;\r\n  background-color: #fff;\r\n  // font-weight: bold;\r\n  font-size: 50px;\r\n  color: #7167E3;\r\n  width: 60px;\r\n  height: 60px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  // box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  // -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n  margin: auto 0;\r\n  @media (max-width: 1330px) {\r\n    width: 50px;\r\n    height: 50px;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  backdrop-filter: blur(4px);\r\n  background-color: rgba(0, 0,0, 0.3);\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  margin: auto;\r\n  border-radius: 20px;\r\n  width: 75%;\r\n  padding: 50px 90px;\r\n  @media (min-width: 940px) {\r\n    flex-direction: row;\r\n  }\r\n  @media (max-width: 1330px) {\r\n    padding: 0;\r\n  }\r\n  @media (max-width: 600px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapperHeader = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n  @media (max-width: 767px) {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapperContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: stretched;\r\n  width: 75%;\r\n  @media (min-width: 767px) {\r\n    // display: block;\r\n    flex-direction: row;\r\n  }\r\n  @media (max-width: 767px) {\r\n    display: -webkit-inline-box;\r\n    // flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledLogo = styled.img`\r\n  display: inline;\r\n  margin: 10px 10px 10px 200px;\r\n  width: 160px;\r\n  @media (max-width: 1330px) {\r\n    margin: 10px 10px 10px 125px;\r\n  }\r\n  @media (max-width: 767px) {\r\n    width: 150px;\r\n    margin: auto\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nexport const SocialMediaImage = styled.img`\r\n  display: inline;\r\n  width: 33px;\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n  transition: transform .3s;\r\n  &:hover {\r\n    transform: scale(1.3);\r\n  };\r\n  @media (max-width: 1330px) {\r\n    width: 25px;\r\n  }\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\r\n  width: 280px;\r\n  @media (min-width: 900px) {\r\n    width: 340px;\r\n  }\r\n  @media (min-width: 1000px) {\r\n    width: 380px;\r\n  }\r\n  transition: width 0.5s;\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  color: var(--secondary);\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const WalletBox = styled.div`\r\n  margin: 10px 100px 10px 10px;\r\n  text-decoration: none;\r\n  border-radius: 10px;\r\n  border: 2px solid white;\r\n  background-color: #363076;\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  width: 250px;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  @media (max-width: 1330px) {\r\n    margin: 10px 40px 10px 10px;\r\n  }\r\n  @media (max-width: 767px) {\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nexport const SocialMedia = styled.a `\r\n  color: #fff;\r\n  margin: 18px;\r\n  vertical-align: middle;\r\n  transition: transform .3s;\r\n  @media (max-width: 600px) {\r\n    margin: 10px;\r\n  }\r\n  &:hover {\r\n    transform: scale(1.2);\r\n  }\r\n`;\r\n\r\nexport const SocialMediaDiv = styled.div `\r\n  font-size: 32px;\r\n  padding: 16px;\r\n  @media (max-width: 1330px) {\r\n    font-size: 24px;\r\n  }\r\n`;\r\n\r\nexport const HowToMint = styled.a`\r\n  color: rgba(73, 252, 227, 0.6);\r\n  // text-decoration: underline;\r\n  font-family: \"Renomono\";\r\n  font-size: 22px;\r\n  // text-align: right;\r\n  line-height: 1.6;\r\n  cursor: pointer;\r\n  word-spacing: -3px;\r\n  &:hover {\r\n    // cursor: pointer;\r\n    text-decoration: underline;\r\n  }\r\n  @media (max-width: 600px) {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nexport const ModalButton = styled.button `\r\n  padding: 13px 29px;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  border-radius: 5px;\r\n  border: none;\r\n  outline: none;\r\n  background: crimson;\r\n  color: white;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const customClasss = `\r\n  border: 2px solid #000;\r\n`;\r\n\r\nexport const UnrevealVid = styled.video `\r\n  border-radius: 4px;\r\n  // border: 4px solid #7167e3;\r\n  width: 280px;\r\n  @media (max-width: 380px) {\r\n    width: 175px;\r\n  }\r\n  @media (max-width: 620px) {\r\n    width: 225px;\r\n    margin: 20px 0 30px 0;\r\n  }\r\n  @media (min-width: 900px) {\r\n    width: 300px;\r\n  }\r\n  @media (min-width: 1000px) {\r\n    width: 340px;\r\n  }\r\n  @media (min-width: 1330px) {\r\n    width: 380px;\r\n  }\r\n`\r\n\r\nfunction Publicsale() {\r\n  const [showModal, setShowModal] = useState(false);\r\n  \r\n  const openModal = () => {\r\n    setShowModal(true);    \r\n  };\r\n\r\n  const [showMintsuccess, setShowMintsuccess] = useState(false);\r\n\r\n  const openMintsuccess = () => {\r\n    setShowMintsuccess(true);    \r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const whitelist_url = \"https://api.gadjahsocietynft.com/whitelist\";\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [walletAddress, setAddress] = useState(\"No connection\");\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [feedback, setFeedback] = useState(``);\r\n  const [mintAmount, setMintAmount] = useState(1);\r\n  const [CONFIG, SET_CONFIG] = useState({\r\n    CONTRACT_ADDRESS: \"\",\r\n    SCAN_LINK: \"\",\r\n    NETWORK: {\r\n      NAME: \"\",\r\n      SYMBOL: \"\",\r\n      ID: 0,\r\n    },\r\n    NFT_NAME: \"\",\r\n    SYMBOL: \"\",\r\n    MAX_SUPPLY: 1,\r\n    WEI_COST: 0,\r\n    DISPLAY_COST: 0,\r\n    GAS_LIMIT: 0,\r\n    WEB_LINK: \"\",\r\n    MARKETPLACE: \"\",\r\n    MARKETPLACE_LINK: \"\",\r\n    SHOW_BACKGROUND: false,\r\n    WHITELIST_URL: \"\"\r\n  });\r\n\r\n  const claimNFTs = () => {\r\n    let cost = CONFIG.WEI_COST;\r\n    let gasLimit = CONFIG.GAS_LIMIT;\r\n    let totalCostWei = String(cost * mintAmount);\r\n    let totalGasLimit = String(gasLimit * mintAmount);\r\n    console.log(\"Cost: \", totalCostWei);\r\n    console.log(\"Gas limit: \", totalGasLimit);\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(mintAmount)\r\n      .send({\r\n        gasLimit: String(totalGasLimit),\r\n        to: CONFIG.CONTRACT_ADDRESS,\r\n        from: blockchain.account,\r\n        value: totalCostWei,\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt);\r\n        setFeedback(\r\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\r\n        );\r\n        setClaimingNft(false);\r\n        // {Swal.fire({  \r\n        //   title: 'Minting Success!',  \r\n        //   icon: 'success',\r\n        //   iconColor: '#7167E3',\r\n        //   text: 'Go check your Metamask or go to Opensea!',  \r\n        //   // imageUrl: 'https://c.tenor.com/LY1HzBmDJwAAAAAC/wink-bryan-breynolds.gif',  \r\n        //   imageWidth: '200px',\r\n        //   timer: 4000,\r\n        //   timerProgressBar: true,\r\n        //   background: '#49FCE3',\r\n        //   customClass: 'swal-custom',\r\n        // })};\r\n        openMintsuccess();\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const decrementMintAmount = () => {\r\n    let newMintAmount = mintAmount - 1;\r\n    if (newMintAmount < 1) {\r\n      newMintAmount = 1;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const incrementMintAmount = () => {\r\n    let newMintAmount = mintAmount + 1;\r\n    if (newMintAmount > 50) {\r\n      newMintAmount = 50;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const getData = () => {\r\n      if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n        dispatch(fetchData(blockchain.account));       \r\n        setAddress(blockchain.account.substring(0,4) + \"...\" + blockchain.account.substring(38,42));\r\n      }\r\n  };\r\n\r\n  const getConfig = async () => {\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const config = await configResponse.json();\r\n    SET_CONFIG(config);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getConfig();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n    \r\n  return (\r\n    <s.Screen>\r\n      <s.Container\r\n        flex={1}\r\n        // ai={\"center\"}\r\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\r\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg_minting.png\" : null}\r\n      >\r\n        <ResponsiveWrapperHeader>\r\n          <a href={CONFIG.WEB_LINK}>\r\n            <StyledLogo alt={\"logo\"} src={\"/config/images/logo_minting.png\"} />\r\n          </a>\r\n\r\n          <SocialMediaDiv>\r\n            <SocialMedia href=\"https://discord.gg/jfjpJZgVUm\">\r\n              <FontAwesomeIcon className=\"zoom-a\" icon={faDiscord} />\r\n            </SocialMedia>\r\n            <SocialMedia href=\"https://twitter.com/GadjahSociety\">\r\n              <FontAwesomeIcon className=\"zoom-a\" icon={faTwitter} />\r\n            </SocialMedia>\r\n            <SocialMedia href=\"https://medium.com/@gadjahsociety\">\r\n              <FontAwesomeIcon className=\"zoom-a\" icon={faMedium} />\r\n            </SocialMedia>\r\n            <SocialMedia href=\"https://www.instagram.com/gadjahsocietynft/\">\r\n              <FontAwesomeIcon className=\"zoom-a\" icon={faInstagram} />\r\n            </SocialMedia>\r\n            <SocialMedia href={CONFIG.MARKETPLACE_LINK}>\r\n              <SocialMediaImage alt={\"logo\"} src={\"/config/images/logo-opensea.png\"} />\r\n            </SocialMedia>\r\n          </SocialMediaDiv>\r\n          \r\n          {/* </SocialMedia> */}\r\n          <WalletBox>\r\n            {blockchain.account !== \"\" ? (\r\n            <>\r\n            <s.TextSubTitle>\r\n              {walletAddress}\r\n              </s.TextSubTitle>\r\n            </>\r\n            ) : null }\r\n          </WalletBox>\r\n        </ResponsiveWrapperHeader>\r\n\r\n        {/* <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n          <s.TextTitle> PUBLIC SALE </s.TextTitle>\r\n        </s.Container> */}\r\n    \r\n        <s.SpacerSmall />\r\n\r\n        <ResponsiveWrapper flex={1} style={{ padding: \"50px 90px\" }} test>\r\n            <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n              {/* <StyledImg alt={\"Gadjah with the duck\"} src={\"/config/images/unr_nft.png\"} /> */}\r\n              <UnrevealVid autoPlay loop muted>\r\n                <source src={\"/config/images/g_reveal.mp4\"} type='video/mp4'/>\r\n              </UnrevealVid>\r\n            </s.Container>\r\n            {/* <s.SpacerLarge /> */}\r\n            <s.Container flex={1} jc={\"center\"} ai={\"center\"} >\r\n            <s.StyledHR></s.StyledHR>\r\n            <s.SpacerSmall />\r\n            {/* <s.TextTitle\r\n              style={{\r\n                textAlign: \"center\",\r\n                fontSize: 50,\r\n                fontWeight: \"bold\",\r\n                color: \"var(--accent-text)\",\r\n              }}\r\n            >\r\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\r\n            </s.TextTitle> */}\r\n            \r\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\r\n              <>\r\n                <s.TextSub\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  The sale has ended.\r\n                </s.TextSub>\r\n                <s.TextDescription\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n                >\r\n                  You can still find {CONFIG.NFT_NAME} on\r\n                </s.TextDescription>\r\n                <s.SpacerSmall />\r\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\r\n                  {CONFIG.MARKETPLACE}\r\n                </StyledLink>\r\n              </>\r\n            ) : (\r\n              <>\r\n              <ResponsiveWrapperContent>\r\n                <s.TextSub>\r\n                  Price\r\n                </s.TextSub>\r\n                <s.TextSub\r\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\",  }}\r\n                >\r\n                  {CONFIG.DISPLAY_COST}{\" \"}{CONFIG.NETWORK.SYMBOL}\r\n                </s.TextSub>\r\n                </ResponsiveWrapperContent>\r\n                <s.SpacerSmall />\r\n                <s.StyledHR></s.StyledHR>\r\n                <s.SpacerXSmall />\r\n                {blockchain.account === \"\" ||\r\n                blockchain.smartContract === null ? (\r\n                  <s.Container ai={\"center\"} jc={\"center\"}>\r\n                    <s.SpacerSmall />\r\n                    <StyledButton\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(connect());\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      CONNECT WALLET\r\n                    </StyledButton>\r\n                    {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.SpacerSmall />\r\n                        <s.TextDescription\r\n                          style={{\r\n                            textAlign: \"center\",\r\n                            color: \"var(--accent-text)\",\r\n                            fontSize: \"20px\"\r\n                          }}\r\n                        >\r\n                          {blockchain.errorMsg}\r\n                        </s.TextDescription>\r\n                      </>\r\n                    ) : null}\r\n                  </s.Container>\r\n                ) : (\r\n                  <>\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                    <ResponsiveWrapperContent>\r\n                      <StyledRoundButton\r\n                        style={{ lineHeight: 0.4 }}\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          decrementMintAmount();\r\n                        }}\r\n                      >\r\n                        -\r\n                      </StyledRoundButton>\r\n                      <s.TextDescription\r\n                        style={{\r\n                          fontFamily : \"Upheaval\",\r\n                          textAlign: \"center\",\r\n                          color: \"var(--accent-text)\",\r\n                        }}\r\n                      >\r\n                        {mintAmount}\r\n                      </s.TextDescription>\r\n                      <StyledRoundButton\r\n                        disabled={claimingNft || mintAmount >= 10 ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          incrementMintAmount();\r\n                        }}\r\n                      >\r\n                        +\r\n                      </StyledRoundButton>\r\n                      </ResponsiveWrapperContent>\r\n                    </s.Container>\r\n                    <s.StyledHR ></s.StyledHR>\r\n                    <s.SpacerSmall />\r\n                    \r\n                    <ResponsiveWrapperContent>\r\n                      <s.TextSub>\r\n                        Total\r\n                      </s.TextSub>\r\n                      <s.TextSub\r\n                        style={{ textAlign: \"right\", color: \"var(--accent-text)\",  }}\r\n                      >\r\n                        {CONFIG.DISPLAY_COST * mintAmount}{\" \"}{CONFIG.NETWORK.SYMBOL}\r\n                      </s.TextSub>  \r\n                    </ResponsiveWrapperContent>\r\n                    \r\n                    <s.SpacerSmall />\r\n                    <s.SpacerXSmall />\r\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n                      <StyledButton\r\n                        disabled={claimingNft ? 1 : 0}\r\n                        onClick={(e) => {\r\n                          e.preventDefault();\r\n                          claimNFTs();\r\n                          getData();\r\n                        }}\r\n                      >\r\n                        {claimingNft ? \"MINTING...\" : \"MINT NOW\"}\r\n                      </StyledButton>\r\n                    </s.Container>                   \r\n                  </>\r\n                )}\r\n                <s.SpacerLarge />\r\n                <HowToMint onClick={openModal}>\r\n                  how to mint <FontAwesomeIcon icon={ faQuestionCircle } />\r\n                </HowToMint>\r\n                {showModal ? <Modal setShowModal={setShowModal} /> : null}\r\n              </>\r\n            )} \r\n            {showMintsuccess ? <Mintsuccess setShowMintsuccess={setShowMintsuccess} /> : null}\r\n            </s.Container>\r\n          <s.SpacerLarge />\r\n        </ResponsiveWrapper>\r\n        <s.SpacerMedium />\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default Publicsale;\r\n","import { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport axios from \"axios\";\r\n// import \"./styles.css\";\r\n\r\nfunction Third() {\r\n  const [books, setBooks] = useState(null);\r\n  const [ok, setOk] = useState(false);\r\n\r\n  const [post, setPost] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"https://api.gadjahsocietynft.com/whitelist\").then((response) => {\r\n      setPost(response.data.reponse);\r\n      console.log(response.data.reponse)\r\n    });\r\n  }, []);\r\n\r\n  // const fetchData = () => {\r\n  //   const response = axios.get(\r\n  //     \"https://api.gadjahsocietynft.com/whitelist\");\r\n\r\n  //   setBooks(response.data);\r\n  //   setOk(true);\r\n\r\n  //   { console.log(response) }\r\n  // };\r\n  \r\n  return (\r\n    <div className=\"Third\">\r\n    \r\n      {/* Display data from API */}\r\n      <div>\r\n        {post &&\r\n          post.map((p, index) => {\r\n            // const cleanedDate = new Date(book.released).toDateString();\r\n            // const authors = book.wallet;\r\n\r\n            return (\r\n              <h1> {p.wallet} </h1>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Third;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport Publicsale from \"./Publicsale\";\r\nimport Third from \"./Third\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\nimport GlobalStyle from \"./fonts\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <GlobalStyle />\r\n    <App />                   {/* Pre-Sale */}\r\n    {/* <Publicsale /> */}    {/* Public Sale */}\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}